<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Account System</title>
    <style>
        /* CSS Styles */
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Arial', sans-serif;
        }
        
        body {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            background-attachment: fixed;
        }
        
        .auth-container {
            background-color: rgba(255, 255, 255, 0.95);
            border-radius: 12px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
            padding: 40px;
            width: 100%;
            max-width: 420px;
            backdrop-filter: blur(5px);
            border: 1px solid rgba(255, 255, 255, 0.2);
            transform: translateY(0);
            transition: transform 0.3s, box-shadow 0.3s;
        }
        
        .auth-container:hover {
            transform: translateY(-5px);
            box-shadow: 0 15px 35px rgba(0, 0, 0, 0.25);
        }
        
        .auth-header {
            text-align: center;
            margin-bottom: 30px;
        }
        
        .auth-header h1 {
            color: #4a4a4a;
            font-size: 28px;
            margin-bottom: 10px;
            font-weight: 700;
        }
        
        .auth-header p {
            color: #666;
            font-size: 15px;
        }
        
        .form-group {
            margin-bottom: 25px;
        }
        
        .form-group label {
            display: block;
            margin-bottom: 8px;
            color: #555;
            font-weight: 600;
            font-size: 14px;
        }
        
        .form-group input {
            width: 100%;
            padding: 14px;
            border: 1px solid #e0e0e0;
            border-radius: 6px;
            font-size: 15px;
            transition: all 0.3s;
            background-color: #f9f9f9;
        }
        
        .form-group input:focus {
            border-color: #667eea;
            outline: none;
            box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.2);
            background-color: white;
        }
        
        .error-message {
            color: #e74c3c;
            font-size: 13px;
            margin-top: 5px;
            display: none;
        }
        
        .success-message {
            color: #2ecc71;
            font-size: 13px;
            margin-top: 5px;
            display: none;
        }
        
        .auth-button {
            width: 100%;
            padding: 14px;
            background: linear-gradient(to right, #667eea, #764ba2);
            color: white;
            border: none;
            border-radius: 6px;
            font-size: 16px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s;
            margin-top: 10px;
            letter-spacing: 0.5px;
        }
        
        .auth-button:hover {
            background: linear-gradient(to right, #5a6fd1, #6a4295);
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
        }
        
        .auth-button:active {
            transform: translateY(0);
        }
        
        .auth-footer {
            text-align: center;
            margin-top: 20px;
        }
        
        .auth-footer a {
            color: #667eea;
            text-decoration: none;
            font-size: 14px;
            transition: color 0.3s;
        }
        
        .auth-footer a:hover {
            color: #4a5bbf;
            text-decoration: underline;
        }
        
        .switch-auth {
            text-align: center;
            margin-top: 25px;
            font-size: 14px;
            color: #666;
        }
        
        .switch-auth a {
            color: #667eea;
            text-decoration: none;
            font-weight: 600;
            transition: color 0.3s;
        }
        
        .switch-auth a:hover {
            color: #4a5bbf;
            text-decoration: underline;
        }
        
        /* Decorative elements */
        .circle {
            position: absolute;
            border-radius: 50%;
            background: rgba(255, 255, 255, 0.1);
        }
        
        .circle-1 {
            width: 150px;
            height: 150px;
            top: 10%;
            left: 10%;
        }
        
        .circle-2 {
            width: 200px;
            height: 200px;
            bottom: 15%;
            right: 15%;
        }
        
        /* Hidden class for toggling views */
        .hidden {
            display: none;
        }
    </style>
</head>
<body>
    <!-- Decorative circles -->
    <div class="circle circle-1"></div>
    <div class="circle circle-2"></div>
    
    <!-- Login View -->
    <div class="auth-container" id="loginView">
        <div class="auth-header">
            <h1>Welcome Back</h1>
            <p>Please enter your credentials to login</p>
        </div>
        
        <form id="loginForm">
            <div class="form-group">
                <label for="loginEmail">Email Address</label>
                <input type="email" id="loginEmail" name="email" placeholder="Enter your email" required>
                <div class="error-message" id="loginEmailError">Please enter a valid email address</div>
            </div>
            
            <div class="form-group">
                <label for="loginPassword">Password</label>
                <input type="password" id="loginPassword" name="password" placeholder="Enter your password" required>
                <div class="error-message" id="loginPasswordError">Password must be at least 6 characters</div>
            </div>
            
            <button type="submit" class="auth-button">Login</button>
            
            <div class="auth-footer">
                <a href="#" id="forgotPasswordLink">Forgot password?</a>
            </div>
        </form>
        
        <div class="switch-auth">
            Don't have an account? <a href="#" id="showSignupLink">Sign up now</a>
        </div>
    </div>

    <!-- Signup View -->
    <div class="auth-container hidden" id="signupView">
        <div class="auth-header">
            <h1>Create Account</h1>
            <p>Join us today to get started</p>
        </div>
        
        <form id="signupForm">
            <div class="form-group">
                <label for="signupName">Full Name</label>
                <input type="text" id="signupName" name="name" placeholder="Enter your full name" required>
                <div class="error-message" id="signupNameError">Please enter your name</div>
            </div>
            
            <div class="form-group">
                <label for="signupEmail">Email Address</label>
                <input type="email" id="signupEmail" name="email" placeholder="Enter your email" required>
                <div class="error-message" id="signupEmailError">Please enter a valid email address</div>
            </div>
            
            <div class="form-group">
                <label for="signupPassword">Password</label>
                <input type="password" id="signupPassword" name="password" placeholder="Create a password" required>
                <div class="error-message" id="signupPasswordError">Password must be at least 6 characters</div>
            </div>
            
            <div class="form-group">
                <label for="signupConfirmPassword">Confirm Password</label>
                <input type="password" id="signupConfirmPassword" name="confirmPassword" placeholder="Confirm your password" required>
                <div class="error-message" id="signupConfirmPasswordError">Passwords do not match</div>
            </div>
            
            <button type="submit" class="auth-button">Sign Up</button>
        </form>
        
        <div class="switch-auth">
            Already have an account? <a href="#" id="showLoginLink">Login here</a>
        </div>
    </div>

    <!-- Forgot Password View -->
    <div class="auth-container hidden" id="forgotPasswordView">
        <div class="auth-header">
            <h1>Reset Password</h1>
            <p>Enter your email to receive a reset link</p>
        </div>
        
        <form id="forgotPasswordForm">
            <div class="form-group">
                <label for="forgotEmail">Email Address</label>
                <input type="email" id="forgotEmail" name="email" placeholder="Enter your email" required>
                <div class="error-message" id="forgotEmailError">Please enter a valid email address</div>
                <div class="success-message" id="forgotEmailSuccess">Password reset link sent to your email!</div>
            </div>
            
            <button type="submit" class="auth-button">Send Reset Link</button>
        </form>
        
        <div class="switch-auth">
            Remember your password? <a href="#" id="backToLoginLink">Login here</a>
        </div>
    </div>

    <script>
        // Initialize users in localStorage if not exists
        if (!localStorage.getItem('users')) {
            localStorage.setItem('users', JSON.stringify([]));
        }

        // Initialize currentUser in localStorage if not exists
        if (!localStorage.getItem('currentUser')) {
            localStorage.setItem('currentUser', JSON.stringify(null));
        }

        // View Toggle Functions
        document.getElementById('showSignupLink').addEventListener('click', function(e) {
            e.preventDefault();
            document.getElementById('loginView').classList.add('hidden');
            document.getElementById('signupView').classList.remove('hidden');
            document.getElementById('forgotPasswordView').classList.add('hidden');
        });

        document.getElementById('showLoginLink').addEventListener('click', function(e) {
            e.preventDefault();
            document.getElementById('loginView').classList.remove('hidden');
            document.getElementById('signupView').classList.add('hidden');
            document.getElementById('forgotPasswordView').classList.add('hidden');
        });

        document.getElementById('forgotPasswordLink').addEventListener('click', function(e) {
            e.preventDefault();
            document.getElementById('loginView').classList.add('hidden');
            document.getElementById('signupView').classList.add('hidden');
            document.getElementById('forgotPasswordView').classList.remove('hidden');
        });

        document.getElementById('backToLoginLink').addEventListener('click', function(e) {
            e.preventDefault();
            document.getElementById('loginView').classList.remove('hidden');
            document.getElementById('signupView').classList.add('hidden');
            document.getElementById('forgotPasswordView').classList.add('hidden');
        });

        // Login Form Validation
        document.getElementById('loginForm').addEventListener('submit', function(e) {
            e.preventDefault();
            
            const email = document.getElementById('loginEmail').value;
            const password = document.getElementById('loginPassword').value;
            
            // Reset errors
            document.getElementById('loginEmailError').style.display = 'none';
            document.getElementById('loginPasswordError').style.display = 'none';
            
            // Validate email
            const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
            if (!emailRegex.test(email)) {
                document.getElementById('loginEmailError').style.display = 'block';
                return;
            }
            
            // Validate password
            if (password.length < 6) {
                document.getElementById('loginPasswordError').style.display = 'block';
                return;
            }
            
            // Check credentials
            const users = JSON.parse(localStorage.getItem('users'));
            const user = users.find(u => u.email === email && u.password === password);
            
            if (user) {
                // Successful login
                localStorage.setItem('currentUser', JSON.stringify(user));
                alert(`Welcome back, ${user.name}! Login successful.`);
                // In a real app, you would redirect to the dashboard here
                // window.location.href = 'dashboard.html';
            } else {
                alert('Invalid email or password. Please try again.');
            }
        });

        // Signup Form Validation
        document.getElementById('signupForm').addEventListener('submit', function(e) {
            e.preventDefault();
            
            const name = document.getElementById('signupName').value;
            const email = document.getElementById('signupEmail').value;
            const password = document.getElementById('signupPassword').value;
            const confirmPassword = document.getElementById('signupConfirmPassword').value;
            
            // Reset errors
            document.getElementById('signupNameError').style.display = 'none';
            document.getElementById('signupEmailError').style.display = 'none';
            document.getElementById('signupPasswordError').style.display = 'none';
            document.getElementById('signupConfirmPasswordError').style.display = 'none';
            
            // Validate name
            if (name.trim() === '') {
                document.getElementById('signupNameError').style.display = 'block';
                return;
            }
            
            // Validate email
            const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
            if (!emailRegex.test(email)) {
                document.getElementById('signupEmailError').style.display = 'block';
                return;
            }
            
            // Validate password
            if (password.length < 6) {
                document.getElementById('signupPasswordError').style.display = 'block';
                return;
            }
            
            // Validate confirm password
            if (password !== confirmPassword) {
                document.getElementById('signupConfirmPasswordError').style.display = 'block';
                return;
            }
            
            // Check if user already exists
            const users = JSON.parse(localStorage.getItem('users'));
            const userExists = users.some(u => u.email === email);
            
            if (userExists) {
                alert('An account with this email already exists. Please login instead.');
                return;
            }
            
            // Create new user
            const newUser = {
                name,
                email,
                password // In a real app, you would hash the password before storing
            };
            
            users.push(newUser);
            localStorage.setItem('users', JSON.stringify(users));
            localStorage.setItem('currentUser', JSON.stringify(newUser));
            
            alert(`Welcome ${name}! Your account has been created successfully.`);
            
            // Switch to login view
            document.getElementById('loginView').classList.remove('hidden');
            document.getElementById('signupView').classList.add('hidden');
            document.getElementById('forgotPasswordView').classList.add('hidden');
            
            // Clear form
            this.reset();
        });

        // Forgot Password Form
        document.getElementById('forgotPasswordForm').addEventListener('submit', function(e) {
            e.preventDefault();
            
            const email = document.getElementById('forgotEmail').value;
            
            // Reset messages
            document.getElementById('forgotEmailError').style.display = 'none';
            document.getElementById('forgotEmailSuccess').style.display = 'none';
            
            // Validate email
            const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
            if (!emailRegex.test(email)) {
                document.getElementById('forgotEmailError').style.display = 'block';
                return;
            }
            
            // Check if user exists
            const users = JSON.parse(localStorage.getItem('users'));
            const userExists = users.some(u => u.email === email);
            
            if (userExists) {
                // In a real app, you would send an email with a reset link here
                document.getElementById('forgotEmailSuccess').style.display = 'block';
                setTimeout(() => {
                    document.getElementById('loginView').classList.remove('hidden');
                    document.getElementById('forgotPasswordView').classList.add('hidden');
                    document.getElementById('forgotEmailSuccess').style.display = 'none';
                }, 3000);
            } else {
                alert('No account found with this email address.');
            }
        });

        // Input validation on blur for all forms
        function setupInputValidation(formId, fieldId, errorId, validationFn) {
            document.getElementById(fieldId).addEventListener('blur', function() {
                if (!validationFn(this.value)) {
                    document.getElementById(errorId).style.display = 'block';
                } else {
                    document.getElementById(errorId).style.display = 'none';
                }
            });
        }

        // Email validation
        const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
        setupInputValidation('loginForm', 'loginEmail', 'loginEmailError', val => emailRegex.test(val));
        setupInputValidation('signupForm', 'signupEmail', 'signupEmailError', val => emailRegex.test(val));
        setupInputValidation('forgotPasswordForm', 'forgotEmail', 'forgotEmailError', val => emailRegex.test(val));

        // Password validation
        setupInputValidation('loginForm', 'loginPassword', 'loginPasswordError', val => val.length >= 6 || val.length === 0);
        setupInputValidation('signupForm', 'signupPassword', 'signupPasswordError', val => val.length >= 6 || val.length === 0);

        // Name validation
        setupInputValidation('signupForm', 'signupName', 'signupNameError', val => val.trim() !== '');

        // Confirm password validation
        document.getElementById('signupConfirmPassword').addEventListener('blur', function() {
            const password = document.getElementById('signupPassword').value;
            if (this.value !== password && this.value.length > 0) {
                document.getElementById('signupConfirmPasswordError').style.display = 'block';
            } else {
                document.getElementById('signupConfirmPasswordError').style.display = 'none';
            }
        });
    </script>
</body>
</html>
