<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Colorful Character Counter</title>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600&display=swap" rel="stylesheet">
    <style>
        :root {
            --primary: #4361ee;
            --success: #4cc9f0;
            --warning: #f8961e;
            --danger: #f72585;
            --light: #f8f9fa;
            --dark: #212529;
        }
        
        * {
            box-sizing: border-box;
            margin: 0;
            padding: 0;
        }
        
        body {
            font-family: 'Poppins', sans-serif;
            min-height: 100vh;
            display: flex;
            justify-content: center;
            align-items: center;
            padding: 20px;
            overflow: hidden;
            position: relative;
        }
        
        /* Colorful animated background */
        .bg {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            z-index: -1;
            background: linear-gradient(-45deg, #ee7752, #e73c7e, #23a6d5, #23d5ab);
            background-size: 400% 400%;
            animation: gradient 15s ease infinite;
        }
        
        @keyframes gradient {
            0% {
                background-position: 0% 50%;
            }
            50% {
                background-position: 100% 50%;
            }
            100% {
                background-position: 0% 50%;
            }
        }
        
        .container {
            background-color: rgba(255, 255, 255, 0.9);
            backdrop-filter: blur(10px);
            border-radius: 20px;
            box-shadow: 0 15px 35px rgba(0, 0, 0, 0.2);
            width: 100%;
            max-width: 600px;
            padding: 40px;
            transition: all 0.3s ease;
            border: 1px solid rgba(255, 255, 255, 0.3);
        }
        
        h1 {
            color: var(--primary);
            text-align: center;
            margin-bottom: 30px;
            font-weight: 600;
            text-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }
        
        .counter-box {
            position: relative;
            margin-bottom: 25px;
        }
        
        textarea {
            width: 100%;
            height: 180px;
            padding: 20px;
            border: 2px solid rgba(255, 255, 255, 0.5);
            border-radius: 15px;
            resize: none;
            font-family: inherit;
            font-size: 16px;
            transition: all 0.3s;
            outline: none;
            background-color: rgba(255, 255, 255, 0.7);
            box-shadow: inset 0 2px 5px rgba(0, 0, 0, 0.1);
        }
        
        textarea:focus {
            border-color: var(--primary);
            box-shadow: 0 0 0 3px rgba(67, 97, 238, 0.3), inset 0 2px 5px rgba(0, 0, 0, 0.1);
            background-color: white;
        }
        
        .counter-display {
            display: flex;
            justify-content: space-between;
            margin-top: 20px;
            font-size: 15px;
        }
        
        .counter-item {
            display: flex;
            align-items: center;
            background-color: rgba(255, 255, 255, 0.7);
            padding: 8px 15px;
            border-radius: 8px;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        }
        
        .counter-value {
            font-weight: 600;
            margin-left: 8px;
            font-size: 17px;
        }
        
        .progress-container {
            height: 8px;
            background-color: rgba(255, 255, 255, 0.5);
            border-radius: 4px;
            margin-top: 15px;
            overflow: hidden;
            box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.1);
        }
        
        .progress-bar {
            height: 100%;
            background-color: var(--success);
            width: 0%;
            transition: width 0.3s, background-color 0.3s;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        }
        
        .actions {
            display: flex;
            gap: 15px;
            margin-top: 25px;
        }
        
        button {
            padding: 12px 24px;
            border: none;
            border-radius: 8px;
            font-family: inherit;
            font-weight: 500;
            cursor: pointer;
            transition: all 0.3s;
            flex: 1;
            font-size: 16px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }
        
        .copy-btn {
            background-color: var(--primary);
            color: white;
        }
        
        .copy-btn:hover {
            background-color: #3a56d4;
            transform: translateY(-2px);
            box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15);
        }
        
        .clear-btn {
            background-color: var(--light);
            color: var(--dark);
        }
        
        .clear-btn:hover {
            background-color: #e2e6ea;
            transform: translateY(-2px);
            box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15);
        }
        
        .toast {
            position: fixed;
            bottom: 30px;
            left: 50%;
            transform: translateX(-50%);
            background-color: rgba(33, 37, 41, 0.9);
            color: white;
            padding: 15px 30px;
            border-radius: 8px;
            opacity: 0;
            transition: opacity 0.3s;
            z-index: 1000;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
            font-weight: 500;
        }
        
        .toast.show {
            opacity: 1;
        }
        
        @media (max-width: 480px) {
            .container {
                padding: 25px;
            }
            
            .actions {
                flex-direction: column;
            }
            
            textarea {
                height: 150px;
                padding: 15px;
            }
        }
    </style>
</head>
<body>
    <div class="bg"></div>
    
    <div class="container">
        <h1>Colorful Character Counter</h1>
        
        <div class="counter-box">
            <textarea id="text-input" placeholder="Start typing here..."></textarea>
            <div class="progress-container">
                <div class="progress-bar" id="progress-bar"></div>
            </div>
            <div class="counter-display">
                <div class="counter-item">
                    <span>Total Characters:</span>
                    <span class="counter-value" id="total-chars">0</span>
                </div>
                <div class="counter-item">
                    <span>Remaining:</span>
                    <span class="counter-value" id="remaining-chars">500</span>
                </div>
            </div>
        </div>
        
        <div class="actions">
            <button class="copy-btn" id="copy-btn">Copy Text</button>
            <button class="clear-btn" id="clear-btn">Clear Text</button>
        </div>
    </div>
    
    <div class="toast" id="toast">Text copied to clipboard! ✨</div>
    
    <script>
        const textInput = document.getElementById('text-input');
        const totalChars = document.getElementById('total-chars');
        const remainingChars = document.getElementById('remaining-chars');
        const progressBar = document.getElementById('progress-bar');
        const copyBtn = document.getElementById('copy-btn');
        const clearBtn = document.getElementById('clear-btn');
        const toast = document.getElementById('toast');
        
        const maxChars = 500;
        remainingChars.textContent = maxChars;
        
        textInput.addEventListener('input', updateCounter);
        
        function updateCounter() {
            const currentLength = textInput.value.length;
            const percentage = (currentLength / maxChars) * 100;
            
            totalChars.textContent = currentLength;
            remainingChars.textContent = maxChars - currentLength;
            progressBar.style.width = `${percentage}%`;
            
            // Update colors based on percentage
            if (percentage >= 90) {
                progressBar.style.backgroundColor = 'var(--danger)';
                remainingChars.style.color = 'var(--danger)';
            } else if (percentage >= 75) {
                progressBar.style.backgroundColor = 'var(--warning)';
                remainingChars.style.color = 'var(--warning)';
            } else {
                progressBar.style.backgroundColor = 'var(--success)';
                remainingChars.style.color = 'inherit';
            }
        }
        
        copyBtn.addEventListener('click', () => {
            if (textInput.value.trim() === '') {
                toast.textContent = "Nothing to copy!";
                showToast();
                return;
            }
            
            navigator.clipboard.writeText(textInput.value)
                .then(() => {
                    toast.textContent = "Text copied to clipboard! ✨";
                    showToast();
                })
                .catch(err => {
                    toast.textContent = "Failed to copy text";
                    showToast();
                    console.error('Failed to copy text: ', err);
                });
        });
        
        clearBtn.addEventListener('click', () => {
            textInput.value = '';
            updateCounter();
            textInput.focus();
        });
        
        function showToast() {
            toast.classList.add('show');
            setTimeout(() => {
                toast.classList.remove('show');
            }, 2000);
        }
        
        // Focus the textarea on page load
        textInput.focus();
    </script>
</body>
</html>
